name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest
    env:      
#     DOCKER_REGISTRY: kemansel.azurecr.io      
      DOCKER_IMAGE: jagj77/elastalert2-server      
      DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}  
      DOCKER_TARGET_PLATFORM: linux/arm64,linux/amd64,linux/arm/v7,linux/arm/v6
      
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx      
      uses: crazy-max/ghaction-docker-buildx@v1      
      with:        
        version: latest 
        
    - name: Prepare      
      if: success()      
      id: prepare      
      run: |        
        echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}        
        echo ::set-output name=docker_image::${DOCKER_REGISTRY}/${DOCKER_IMAGE}        
        echo ::set-output name=docker_image::${DOCKER_IMAGE}        
        echo ::set-output name=version::${GITHUB_RUN_NUMBER}    
    
    #- name: Docker Login      
    #  if: success()      
    #  run: |        
    #    echo "${DOCKER_PASSWORD}" | docker login ${DOCKER_REGISTRY} --username "${DOCKER_USERNAME}" --password-stdin          
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Run Buildx (push image)      
      if: success()      
      run: |        
        docker buildx build \
        --platform ${{ steps.prepare.outputs.docker_platform }} \
        --tag ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }} \
        --file ./Dockerfile-buster \
        --output type=image,push=true .
